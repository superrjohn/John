<!DOCTYPE html><html lang="zh-TW"><head><meta charset="UTF-8"/><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"/><meta name="theme-color" content="#222"/><meta http-equiv="X-UA-COMPATIBLE" content="IE=edge,chrome=1"/><meta name="renderer" content="webkit"/><link rel="icon" type="image/ico" sizes="32x32" href="/John/assets/favicon.ico"/><link rel="apple-touch-icon" sizes="180x180" href="/John/assets/apple-touch-icon.png"/><link rel="alternate" href="/John/rss.xml" title="一切都是過程" type="application/rss+xml"><link rel="alternate" href="/John/atom.xml" title="一切都是過程" type="application/atom+xml"><link rel="alternate" type="application/json" title="一切都是過程" href="https://superrjohn.github.io/John/feed.json"/><link rel="preconnect" href="https://lf9-cdn-tos.bytecdntp.com"/><link rel="dns-prefetch" href="https://cdn.jsdelivr.net"/><link rel="dns-prefetch" href="https://unpkg.com"/><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/John/css/app.css?v=0.3.6"><script src="https://cdn.staticfile.org/vue/3.2.45/vue.global.prod.js"></script><link rel="stylesheet" href="https://unpkg.com/@waline/client@v2/dist/waline.css"/><meta name="keywords" content="SpringSecurity"/><link rel="canonical" href="https://superrjohn.github.io/John/2023/11/03/java/SpringSecurity/WeChat_login"><title>SpringSecurity 微信登錄</title><meta name="generator" content="Hexo 6.3.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">SpringSecurity 微信登錄</h1><div class="meta"><span class="item" title="創建時間：2023-11-03 23:39:05"><span class="icon"><i class="ic i-calendar"></i></span><span class="text">發表於</span><time itemprop="dateCreated datePublished" datetime="2023-11-03T23:39:05+08:00">2023-11-03</time></span><span class="item" title="文章字數"><span class="icon"><i class="ic i-pen"></i></span><span class="text">文章字數</span><span>14k</span><span class="text">字</span></span><span class="item" title="所需閱讀時間"><span class="icon"><i class="ic i-clock"></i></span><span class="text">所需閱讀時間</span><span>12 分鐘</span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切換導航欄"><span class="line"></span><span class="line"></span><span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/John/" rel="start">john's blog</a></li></ul><ul class="right" id="rightNav"><li class="item theme" @click="changeThemeByBtn"><i class="ic" :class="{'i-sun': !themeStatus,'i-moon': themeStatus}"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div class="pjax" id="imgs"><img src="https://pic4.zhimg.com/v2-19487dece3b094050f8b030a993bdd76_1440w.jpg?source=172ae18b"></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"></path></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"></use><use xlink:href="#gentle-wave" x="48" y="3"></use><use xlink:href="#gentle-wave" x="48" y="5"></use><use xlink:href="#gentle-wave" x="48" y="7"></use></g></svg></div><main><div class="inner"><div class="pjax" id="main"><div class="article wrap"><div class="breadcrumb" itemListElement itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i><span><a href="/John/">首頁</a></span><i class="ic i-angle-right"></i><span itemprop="itemListElement" itemscope="itemscope" itemtype="https://schema.org/ListItem"><a href="/John/categories/java/" itemprop="item" rel="index" title="分類於java"><span itemprop="name">java<meta itemprop="position" content="0"/></span></a></span><i class="ic i-angle-right"></i><span class="current" itemprop="itemListElement" itemscope="itemscope" itemtype="https://schema.org/ListItem"><a href="/John/categories/java/SpringSecurity/" itemprop="item" rel="index" title="分類於SpringSecurity"><span itemprop="name">SpringSecurity<meta itemprop="position" content="1"/></span></a></span></div><article class="post block" itemscope="itemscope" itemtype="http://schema.org/Article" lang="zh-TW"><link itemprop="mainEntityOfPage" href="https://superrjohn.github.io/John/2023/11/03/java/SpringSecurity/WeChat_login"/><span hidden="hidden" itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="image" content="/John/assets/404.png"/><meta itemprop="name" content="John"/><meta itemprop="description" content=", "/></span><span hidden="hidden" itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="一切都是過程"/></span><div class="body md" itemprop="articleBody"><p>在此特别感謝黑馬程序員提供的課程: <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWo4NDExTjdCbS8=">學成在線</span></p>
<p>前言<br>
於由實習項目快做完才做記錄，而且項目模塊較多，故挑部份來記錄，所以這遍主要是 SpringSecurity 內容。<br>
<span class="rainbow">完整项目地址</span>：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N1cGVycmpvaG4vamF2YV93ZWI=">https://github.com/superrjohn/java_web</span></p>
<p><span class="green">上篇:</span><a href="/John/2023/10/30/java/SpringSecurity/SpringSecurity">認證授權</a></p>
<h1 id="驗證碼服務"><a class="markdownIt-Anchor" href="#驗證碼服務">#</a> 驗證碼服務</h1>
<h2 id="部署驗證碼服務工程"><a class="markdownIt-Anchor" href="#部署驗證碼服務工程">#</a> 部署驗證碼服務工程</h2>
<p>🔴在認證時一般都需要輸入驗證碼，驗證碼有什麼用？</p>
<blockquote><p>驗證碼可以防止惡性攻擊，例如：XSS 跨站腳本攻擊、CSRF 跨站請求偽造攻擊，一些比較複雜的圖形驗證碼可以有效的防止惡性攻擊。<br>
為了保護系統的安全性在一些比較重要的操作都需要驗證碼。</p>
</blockquote>
<p>本專案建立單獨的驗證碼服務為各業務提供驗證碼的產生、校驗等服務。<br>
拷貝課程資料目錄 xuecheng-plus-checkcode 驗證碼服務工程到自己的工程目錄。<br>
然後定義 nacos 設定檔</p>
<figure class="highlight yaml"><figcaption><span>YAML</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span> </span><br><span class="line">  <span class="attr">servlet:</span> </span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/checkcode</span> </span><br><span class="line">  <span class="attr">port:</span> <span class="number">63075</span> </span><br></pre></td></tr></table></figure>
<p>注意修改 bootstrap.yml 中的命名空間為自己定義的命名空間。<br>
配置 redis-dev.yaml，儲存 redis 服務啟動</p>
<figure class="highlight xml"><figcaption><span>XML</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:  </span><br><span class="line">  redis: </span><br><span class="line">    host: 192.168.101.65 </span><br><span class="line">    port: 6379 </span><br><span class="line">    password: redis </span><br><span class="line">    database: 0 </span><br><span class="line">    lettuce: </span><br><span class="line">      pool: </span><br><span class="line">        max-active: 20 </span><br><span class="line">        max-idle: 10 </span><br><span class="line">        min-idle: 0 </span><br><span class="line">    timeout: 10000 </span><br><span class="line">    #redisson: </span><br><span class="line">      #配置文件目录 </span><br><span class="line">      #config: classpath:singleServerConfig.yaml </span><br></pre></td></tr></table></figure>
<h2 id="驗證碼介面測試"><a class="markdownIt-Anchor" href="#驗證碼介面測試">#</a> 驗證碼介面測試</h2>
<p>1️⃣黑馬提供的驗證碼服務中的 Controller 中有一個方法，是用來產生驗證碼圖片的</p>
<figure class="highlight java"><figcaption><span>JAVA</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(value=&quot;生成验证信息&quot;, notes=&quot;生成验证信息&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/pic&quot;)</span></span><br><span class="line"><span class="keyword">public</span> CheckCodeResultDto <span class="title function_">generatePicCheckCode</span><span class="params">(CheckCodeParamsDto checkCodeParamsDto)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> picCheckCodeService.generate(checkCodeParamsDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2️⃣我們使用 HttpClient 測試該介面</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#### 获取验证码图片</span><br><span class="line">POST localhost:<span class="number">53075</span>/checkcode/pic</span><br></pre></td></tr></table></figure>
<p>3️⃣回應結果如下，圖片是以 base64 編碼格式儲存的，我們可以複製直接在瀏覽器中開啟</p>
<img data-src="/John/img/java/SpringSecurity/14.png" class="abc">
<p>4️⃣驗證碼服務如何產生併校驗驗證碼？</p>
<img data-src="/John/img/java/SpringSecurity/15.png" class="abc">
<p>1. 給產生的驗證碼分配一個 key，將 key 和驗證碼一同存入 redis。 這個 key 和圖片一同回頁給頁面。<br>
2. 使用者輸入驗證碼，連同 key 一同提交至認證服務，只是這個 key 被隱藏起來，自動輸入。<br>
3. 驗證碼服務根據 key 從快取取出正確的驗證碼和使用者輸入的驗證碼進行比對，如果相同則校驗通過，否則不通過。</p>
<p>5️⃣校驗驗證碼介面，code 需要改為圖片顯示的值</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 校验验证码 </span><br><span class="line">POST &#123;&#123;checkcode_host&#125;&#125;/checkcode/verify?key=checkcode4506b95bddbe46cdb0d56810b747db1b&amp;code=70dl </span><br></pre></td></tr></table></figure>
<h2 id="帳號密碼認證"><a class="markdownIt-Anchor" href="#帳號密碼認證">#</a> 帳號密碼認證</h2>
<p>執行流程如下：</p>
<img data-src="/John/img/java/SpringSecurity/16.png" class="abc">
<p>1、在認證服務定義遠端呼叫驗證碼服務的接口，FeignClient 的參數 value 為服務名，CheckCodeClientFactory 為降級方法</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;checkcode&quot;,fallbackFactory = CheckCodeClientFactory.class)</span> </span><br><span class="line"> <span class="meta">@RequestMapping(&quot;/checkcode&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CheckCodeClient</span> &#123; </span><br><span class="line"> </span><br><span class="line"> <span class="meta">@PostMapping(value = &quot;/verify&quot;)</span> </span><br><span class="line"> <span class="keyword">public</span> Boolean <span class="title function_">verify</span><span class="params">(<span class="meta">@RequestParam(&quot;key&quot;)</span> String key,<span class="meta">@RequestParam(&quot;code&quot;)</span> String code)</span>; </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.CheckCodeClientFactory:</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> </span><br><span class="line"><span class="meta">@Component</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckCodeClientFactory</span> <span class="keyword">implements</span> <span class="title class_">FallbackFactory</span>&lt;CheckCodeClient&gt; &#123; </span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">public</span> CheckCodeClient <span class="title function_">create</span><span class="params">(Throwable throwable)</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CheckCodeClient</span>() &#123; </span><br><span class="line"> </span><br><span class="line">            <span class="meta">@Override</span> </span><br><span class="line">            <span class="keyword">public</span> Boolean <span class="title function_">verify</span><span class="params">(String key, String code)</span> &#123; </span><br><span class="line">                log.debug(<span class="string">&quot;调用验证码服务熔断异常:&#123;&#125;&quot;</span>, throwable.getMessage()); </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>3. 啟動類添加，basePackages 為遠程調用接口的目錄</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients(basePackages=&#123;&quot;com.xuecheng.*.feignclient&quot;&#125;)</span> </span><br></pre></td></tr></table></figure>
<p>配置文件引入 feign-dev.yaml</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- data-id: feign-$&#123;spring.profiles.active&#125;.yaml </span><br><span class="line">  group: xuecheng-plus-common </span><br><span class="line">  refresh: <span class="literal">true</span> </span><br></pre></td></tr></table></figure>
<p>4. 完善 PasswordAuthServiceImpl</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;password_authservice&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PasswordAuthServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AuthService</span> &#123; </span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Autowired</span> </span><br><span class="line"> XcUserMapper xcUserMapper; </span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Autowired</span> </span><br><span class="line"> PasswordEncoder passwordEncoder; </span><br><span class="line"> <span class="meta">@Autowired</span> </span><br><span class="line"> CheckCodeClient checkCodeClient; </span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Override</span> </span><br><span class="line"> <span class="keyword">public</span> XcUser <span class="title function_">execute</span><span class="params">(AuthParamsDto authParamsDto)</span> &#123; </span><br><span class="line"> </span><br><span class="line">  <span class="comment">//校验验证码 </span></span><br><span class="line">  <span class="type">String</span> <span class="variable">checkcode</span> <span class="operator">=</span> authParamsDto.getCheckcode(); </span><br><span class="line">  <span class="type">String</span> <span class="variable">checkcodekey</span> <span class="operator">=</span> authParamsDto.getCheckcodekey(); </span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span>(StringUtils.isBlank(checkcodekey) || StringUtils.isBlank(checkcode))&#123; </span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;验证码为空&quot;</span>); </span><br><span class="line"> </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="type">Boolean</span> <span class="variable">verify</span> <span class="operator">=</span> checkCodeClient.verify(checkcodekey, checkcode); </span><br><span class="line">  <span class="keyword">if</span>(!verify)&#123; </span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;验证码输入错误&quot;</span>); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//账号 </span></span><br><span class="line">  <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> authParamsDto.getUsername(); </span><br><span class="line">  <span class="type">XcUser</span> <span class="variable">user</span> <span class="operator">=</span> xcUserMapper.selectOne(<span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;XcUser&gt;().eq(XcUser::getUsername, username)); </span><br><span class="line">  <span class="keyword">if</span>(user==<span class="literal">null</span>)&#123; </span><br><span class="line">   <span class="comment">//返回空表示用户不存在 </span></span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;账号不存在&quot;</span>); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//校验密码 </span></span><br><span class="line">  <span class="comment">//取出数据库存储的正确密码 </span></span><br><span class="line">  <span class="type">String</span> <span class="variable">passwordDb</span>  <span class="operator">=</span>user.getPassword(); </span><br><span class="line">  <span class="type">String</span> <span class="variable">passwordForm</span> <span class="operator">=</span> authParamsDto.getPassword(); </span><br><span class="line">  <span class="type">boolean</span> <span class="variable">matches</span> <span class="operator">=</span> passwordEncoder.matches(passwordForm, passwordDb); </span><br><span class="line">  <span class="keyword">if</span>(!matches)&#123; </span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;账号或密码错误&quot;</span>); </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> user; </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="帳號密碼認證測試"><a class="markdownIt-Anchor" href="#帳號密碼認證測試">#</a> 帳號密碼認證測試</h2>
<img data-src="/John/img/java/SpringSecurity/17.png" class="abc">
<p>1. 使用瀏覽器造訪 <span class="exturl" data-url="aHR0cDovL3d3dy41MXh1ZWNoZW5nLmNuL3NpZ24uaHRtbA==">http://www.51xuecheng.cn/sign.html</span><br>
2. 先測試驗證碼，分別輸入正確的驗證碼、錯誤的驗證碼進行測試<br>
 3. 輸入正確的帳號密碼和錯誤的帳號密碼進行測試<br>
登入成功將 jwt 令牌儲存 cookie.<br>
4. 測試自動登入<br>
勾選自動登入 cookie 產生時間為 30 天，不勾選自動登入關閉瀏覽器視窗後自動刪除 cookie。</p>
<h1 id="微信掃碼登入"><a class="markdownIt-Anchor" href="#微信掃碼登入">#</a> 微信掃碼登入</h1>
<h2 id="接入流程"><a class="markdownIt-Anchor" href="#接入流程">#</a> 接入流程</h2>
<p>前言：先要在<span class="exturl" data-url="aHR0cHM6Ly9vcGVuLndlaXhpbi5xcS5jb20v">网站应用开发</span>，並擁有已審核通過的網站應用，並取得相應的 AppID 和 AppSecret，申請微信登入且通過審核後，可開始接取流程 (上網找可以找到資源)</p>
<p>微信掃碼登入基於 OAuth2 協定的授權碼模式，</p>
<p>介面文檔：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vZG9jL29wbGF0Zm9ybS9XZWJzaXRlX0FwcC9XZUNoYXRfTG9naW4vV2VjaGF0X0xvZ2luLmh0bWw=">https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html</span></p>
<p>微信 OAuth2.0 授權登入目前支援 authorization_code 模式，適用於擁有 server 端的應用程式授權。 此模式整體流程為：<br>
1️⃣第三方發起微信授權登入要求，微信使用者允許授權第三方應用程式後，微信會拉起應用程式或重定向到第三方網站，並且帶上授權臨時票據 code 參數；<br>
2️⃣透過 code 參數加上 AppID 和 AppSecret 等，透過 API 換取 access_token；<br>
3️⃣透過 access_token 進行介面調用，取得使用者基本資料資源或幫助使用者實現基本操作。</p>
<img data-src="/John/img/java/SpringSecurity/18.png" class="abc">
<p>步驟 1：在頁面中先引入以下 JS 檔案（支援 https）：</p>
<figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://res.wx.qq.com/connect/zh_CN/htmledition/js/wxLogin.js </span><br></pre></td></tr></table></figure>
<p>步驟 2：在需要使用微信登入的地方實例以下 JS 物件：</p>
<p>var obj = new WxLogin({<br>
self_redirect:true,<br>
id:“login_container”,<br>
appid: “<span class="yellow">網站應用審核通過後獲得</span>”,<br>
scope: “”,<br>
redirect_uri: “<span class="yellow">用戶按下同意後，網站應用重定向</span>”,<br>
state: “”,<br>
style: “”,<br>
href: “”<br>
});</p>
<h1 id="接入微信登入"><a class="markdownIt-Anchor" href="#接入微信登入">#</a> 接入微信登入</h1>
<h2 id="接入分析"><a class="markdownIt-Anchor" href="#接入分析">#</a> 接入分析</h2>
 <img data-src="/John/img/java/SpringSecurity/19.png" class="abc">
<p>1️⃣需要定義介面接收微信下發的授權碼。<br>
2️⃣收到授權碼呼叫微信介面申請令牌。<br>
3️⃣申請到令牌調用微信獲取用戶信息<br>
4️⃣取得使用者資訊成功將其寫入本專案用戶中心資料庫。<br>
5️⃣最後重定向到瀏覽器自動登入。</p>
<h2 id="定義接口"><a class="markdownIt-Anchor" href="#定義接口">#</a> 定義接口</h2>
<p>參考介面規格中「請求取得授權碼」 定義接收微信下發的授權碼接口，<br>
定義 WxLoginController 類，當用戶在前端掃碼時，用戶同意後會跳轉到這個方法，收到用戶信息後再執行微信認證的 service 自動登錄，如下:</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> </span><br><span class="line"><span class="meta">@Controller</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxLoginController</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/wxLogin&quot;)</span> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">wxLogin</span><span class="params">(String code, String state)</span> <span class="keyword">throws</span> IOException &#123; </span><br><span class="line">        log.debug(<span class="string">&quot;微信扫码回调,code:&#123;&#125;,state:&#123;&#125;&quot;</span>,code,state); </span><br><span class="line">        <span class="comment">//请求微信申请令牌，拿到令牌查询用户信息，将用户信息写入本项目数据库 </span></span><br><span class="line">        <span class="type">XcUser</span> <span class="variable">xcUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XcUser</span>(); </span><br><span class="line">        <span class="comment">//暂时硬编写，目的是调试环境 </span></span><br><span class="line">        xcUser.setUsername(<span class="string">&quot;t1&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(xcUser==<span class="literal">null</span>)&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:http://www.51xuecheng.cn/error.html&quot;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> xcUser.getUsername(); </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:http://www.51xuecheng.cn/sign.html?username=&quot;</span>+username+<span class="string">&quot;&amp;authType=wx&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>定義微信認證的 service</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> </span><br><span class="line"><span class="meta">@Service(&quot;wx_authservice&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxAuthServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AuthService</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    XcUserMapper xcUserMapper; </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">public</span> XcUserExt <span class="title function_">execute</span><span class="params">(AuthParamsDto authParamsDto)</span> &#123; </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//账号 </span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> authParamsDto.getUsername(); </span><br><span class="line">        <span class="type">XcUser</span> <span class="variable">user</span> <span class="operator">=</span> xcUserMapper.selectOne(<span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;XcUser&gt;().eq(XcUser::getUsername, username)); </span><br><span class="line">        <span class="keyword">if</span>(user==<span class="literal">null</span>)&#123; </span><br><span class="line">            <span class="comment">//返回空表示用户不存在 </span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;账号不存在&quot;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="type">XcUserExt</span> <span class="variable">xcUserExt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XcUserExt</span>(); </span><br><span class="line">        BeanUtils.copyProperties(user,xcUserExt); </span><br><span class="line">        <span class="keyword">return</span> xcUserExt; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="接入微信認證"><a class="markdownIt-Anchor" href="#接入微信認證">#</a> 接入微信認證</h2>
<p>接下来请求微信申请令牌。<br>
1️⃣因為和第三方進行遠程調用，所以使用 restTemplate 请求微信，配置 RestTemplate bean</p>
<p>在啟動類配置 restTemplate</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span> </span><br><span class="line">RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span>&#123; </span><br><span class="line">    <span class="type">RestTemplate</span> <span class="variable">restTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>(<span class="keyword">new</span> <span class="title class_">OkHttp3ClientHttpRequestFactory</span>()); </span><br><span class="line">    <span class="keyword">return</span>  restTemplate; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>2️⃣定義與微信認證的 service 介面：</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">WxAuthService</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> XcUser <span class="title function_">wxAuth</span><span class="params">(String code)</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>3️⃣下邊在 controller 中呼叫 wxAuth 介面：</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> </span><br><span class="line"><span class="meta">@Controller</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxLoginController</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    WxAuthService wxAuthService; </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/wxLogin&quot;)</span> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">wxLogin</span><span class="params">(String code, String state)</span> <span class="keyword">throws</span> IOException &#123; </span><br><span class="line">        log.debug(<span class="string">&quot;微信扫码回调,code:&#123;&#125;,state:&#123;&#125;&quot;</span>,code,state); </span><br><span class="line">        <span class="comment">//请求微信申请令牌，拿到令牌查询用户信息，将用户信息写入本项目数据库 </span></span><br><span class="line">        <span class="type">XcUser</span> <span class="variable">xcUser</span> <span class="operator">=</span> wxAuthService.wxAuth(code); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(xcUser==<span class="literal">null</span>)&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:http://www.51xuecheng.cn/error.html&quot;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> xcUser.getUsername(); </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:http://www.51xuecheng.cn/sign.html?username=&quot;</span>+username+<span class="string">&quot;&amp;authType=wx&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>4️⃣在 WxAuthService 的 wxAuth 方法中實作申請令牌、查詢使用者資訊等內容，appid 和 secret 是在微信開放平台註冊後獲得的，將它們配在 nacos 的 auth-service-dev.yaml 配置文件中，然而把值注入進來使用</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> </span><br><span class="line"><span class="meta">@Service(&quot;wx_authservice&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxAuthServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AuthService</span>, WxAuthService &#123; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line">XcUserMapper xcUserMapper; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line">RestTemplate restTemplate; </span><br><span class="line"> </span><br><span class="line"><span class="meta">@Value(&quot;$&#123;weixin.appid&#125;&quot;)</span> </span><br><span class="line">String appid; </span><br><span class="line"><span class="meta">@Value(&quot;$&#123;weixin.secret&#125;&quot;)</span> </span><br><span class="line">String secret; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> XcUser <span class="title function_">wxAuth</span><span class="params">(String code)</span>&#123; </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//收到code调用微信接口申请access_token </span></span><br><span class="line">    Map&lt;String, String&gt; access_token_map = getAccess_token(code); </span><br><span class="line">    <span class="keyword">if</span>(access_token_map==<span class="literal">null</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    System.out.println(access_token_map); </span><br><span class="line">    <span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> access_token_map.get(<span class="string">&quot;openid&quot;</span>); </span><br><span class="line">    <span class="type">String</span> <span class="variable">access_token</span> <span class="operator">=</span> access_token_map.get(<span class="string">&quot;access_token&quot;</span>); </span><br><span class="line">    <span class="comment">//拿access_token查询用户信息 </span></span><br><span class="line">    Map&lt;String, String&gt; userinfo = getUserinfo(access_token, openid); </span><br><span class="line">    <span class="keyword">if</span>(userinfo==<span class="literal">null</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//添加用户到数据库 </span></span><br><span class="line">    <span class="type">XcUser</span> <span class="variable">xcUser</span> <span class="operator">=</span> <span class="literal">null</span>; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span> xcUser; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>5️⃣getAccess_token 方法，拿著授權碼申請令牌方法，因微信返回是 JSON, 所以我們用 Map 接收，把原本請求微信地址的關鍵參數用 % s 佔位，然後用 format 方法把佔位參數修改成我們的數據，重新拼接 url</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;String,String&gt; <span class="title function_">getAccess_token</span><span class="params">(String code)</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">wxUrl_template</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code&quot;</span>; </span><br><span class="line">    <span class="comment">//请求微信地址 </span></span><br><span class="line">    <span class="type">String</span> <span class="variable">wxUrl</span> <span class="operator">=</span> String.format(wxUrl_template, appid, secret, code); </span><br><span class="line"> </span><br><span class="line">    log.info(<span class="string">&quot;调用微信接口申请access_token, url:&#123;&#125;&quot;</span>, wxUrl); </span><br><span class="line">    <span class="comment">//遠程調用微信url</span></span><br><span class="line">    ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(wxUrl, HttpMethod.POST, <span class="literal">null</span>, String.class); </span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> exchange.getBody(); </span><br><span class="line">    log.info(<span class="string">&quot;调用微信接口申请access_token: 返回值:&#123;&#125;&quot;</span>, result); </span><br><span class="line">    <span class="comment">//json轉為map</span></span><br><span class="line">    Map&lt;String,String&gt; resultMap = JSON.parseObject(result, Map.class); </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> resultMap; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>6️⃣getUserinfo, 攜帶令牌查詢用戶信息，關鍵 url 的參數用 % s 佔位，把令牌獲得的值填上</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;String,String&gt; <span class="title function_">getUserinfo</span><span class="params">(String access_token,String openid)</span> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="type">String</span> <span class="variable">wxUrl_template</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/sns/userinfo?access_token=%s&amp;openid=%s&quot;</span>; </span><br><span class="line">    <span class="comment">//请求微信地址 </span></span><br><span class="line">    <span class="type">String</span> <span class="variable">wxUrl</span> <span class="operator">=</span> String.format(wxUrl_template, access_token,openid); </span><br><span class="line"> </span><br><span class="line">    log.info(<span class="string">&quot;调用微信接口申请access_token, url:&#123;&#125;&quot;</span>, wxUrl); </span><br><span class="line"> </span><br><span class="line">    ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(wxUrl, HttpMethod.POST, <span class="literal">null</span>, String.class); </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//防止乱码进行转码 </span></span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(exchange.getBody().getBytes(StandardCharsets.ISO_8859_1),StandardCharsets.UTF_8); </span><br><span class="line">    log.info(<span class="string">&quot;调用微信接口申请access_token: 返回值:&#123;&#125;&quot;</span>, result); </span><br><span class="line">    Map&lt;String,String&gt; resultMap = JSON.parseObject(result, Map.class); </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> resultMap; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h2 id="儲存使用者資訊"><a class="markdownIt-Anchor" href="#儲存使用者資訊">#</a> 儲存使用者資訊</h2>
<p>向資料庫保存使用者訊息，如果使用者不存在將其保存在資料庫中，事務控制</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line">XcUserRoleMapper xcUserRoleMapper; </span><br><span class="line"> </span><br><span class="line"><span class="meta">@Transactional</span> </span><br><span class="line"><span class="keyword">public</span> XcUser <span class="title function_">addWxUser</span><span class="params">(Map userInfo_map)</span>&#123; </span><br><span class="line">    <span class="type">String</span> <span class="variable">unionid</span> <span class="operator">=</span> userInfo_map.get(<span class="string">&quot;unionid&quot;</span>).toString(); </span><br><span class="line">    <span class="comment">//根据unionid查询数据库 </span></span><br><span class="line">    <span class="type">XcUser</span> <span class="variable">xcUser</span> <span class="operator">=</span> xcUserMapper.selectOne(<span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;XcUser&gt;().eq(XcUser::getWxUnionid, unionid)); </span><br><span class="line">    <span class="keyword">if</span>(xcUser!=<span class="literal">null</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> xcUser; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> UUID.randomUUID().toString(); </span><br><span class="line">    xcUser = <span class="keyword">new</span> <span class="title class_">XcUser</span>(); </span><br><span class="line">    xcUser.setId(userId); </span><br><span class="line">    xcUser.setWxUnionid(unionid); </span><br><span class="line">    <span class="comment">//记录从微信得到的昵称 </span></span><br><span class="line">    xcUser.setNickname(userInfo_map.get(<span class="string">&quot;nickname&quot;</span>).toString()); </span><br><span class="line">    xcUser.setUserpic(userInfo_map.get(<span class="string">&quot;headimgurl&quot;</span>).toString()); </span><br><span class="line">    xcUser.setName(userInfo_map.get(<span class="string">&quot;nickname&quot;</span>).toString()); </span><br><span class="line">    xcUser.setUsername(unionid); </span><br><span class="line">    xcUser.setPassword(unionid); </span><br><span class="line">    xcUser.setUtype(<span class="string">&quot;101001&quot;</span>);<span class="comment">//学生类型 </span></span><br><span class="line">    xcUser.setStatus(<span class="string">&quot;1&quot;</span>);<span class="comment">//用户状态 </span></span><br><span class="line">    xcUser.setCreateTime(LocalDateTime.now()); </span><br><span class="line">    xcUserMapper.insert(xcUser); </span><br><span class="line">    <span class="comment">//向用戶角色關係表新增記錄</span></span><br><span class="line">    <span class="type">XcUserRole</span> <span class="variable">xcUserRole</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XcUserRole</span>(); </span><br><span class="line">    xcUserRole.setId(UUID.randomUUID().toString()); </span><br><span class="line">    xcUserRole.setUserId(userId); </span><br><span class="line">    xcUserRole.setRoleId(<span class="string">&quot;17&quot;</span>);<span class="comment">//学生角色 </span></span><br><span class="line">    xcUserRoleMapper.insert(xcUserRole); </span><br><span class="line">    <span class="keyword">return</span> xcUser; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>調用保存用户信息方法，</p>
<figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line">WxAuthServiceImpl currentProxy; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> XcUser <span class="title function_">wxAuth</span><span class="params">(String code)</span>&#123; </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//收到code调用微信接口申请access_token </span></span><br><span class="line">    Map&lt;String, String&gt; access_token_map = getAccess_token(code); </span><br><span class="line">    <span class="keyword">if</span>(access_token_map==<span class="literal">null</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//System.out.println(access_token_map); </span></span><br><span class="line">    <span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> access_token_map.get(<span class="string">&quot;openid&quot;</span>); </span><br><span class="line">    <span class="type">String</span> <span class="variable">access_token</span> <span class="operator">=</span> access_token_map.get(<span class="string">&quot;access_token&quot;</span>); </span><br><span class="line">    <span class="comment">//拿access_token查询用户信息 </span></span><br><span class="line">    Map&lt;String, String&gt; userinfo = getUserinfo(access_token, openid); </span><br><span class="line">    <span class="keyword">if</span>(userinfo==<span class="literal">null</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//将用户信息保存到数据库 </span></span><br><span class="line">    <span class="type">XcUser</span> <span class="variable">xcUser</span> <span class="operator">=</span> currentProxy.addWxUser(userinfo); </span><br><span class="line">    <span class="keyword">return</span> xcUser; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<blockquote><p>注意：非事務方法調用事務方法，要使用代理物件調用，前面也提到這點<br>
這裡的 addWxUser () 方法涉及了多表操作，所以需要進行事務控制，而 wxAuth () 是非事務方法，所以這裡我們需要注入自身，然後呼叫 addWxUser ()</p>
</blockquote>
<p>重啟服務，掃碼登入測試，登入成功，並在數據庫記錄了微信用戶的信息！</p>
<img data-src="/John/img/java/SpringSecurity/20.png" class="abc">
<img data-src="/John/img/java/SpringSecurity/21.png" class="abc">
<p><span class="rainbow">總結</span>:<br>
1️⃣從微信拿到 JS 文件代碼在前端顯示，當用戶掃碼同意後，url 會重定向我們指定的地址</p>
<figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var obj = new WxLogin(&#123; </span><br><span class="line">self_redirect:true, </span><br><span class="line">id:&quot;login_container&quot;,  </span><br><span class="line">appid: &quot;網站應用審核通過後獲得&quot;,  </span><br><span class="line">scope: &quot;&quot;,  </span><br><span class="line">redirect_uri: http://localhost:8160/auth/wxLogin&quot;, </span><br><span class="line"> state: &quot;&quot;, </span><br><span class="line">style: &quot;&quot;, </span><br><span class="line">href: &quot;&quot; </span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure>
<p>2️⃣會重定向本項目 wxLogin 的 API, 執行 wxAuth 方法<br>
3️⃣wxAuth 方法會用 restTemplate 遠程調用微信接口：申請令牌、拿著令牌查詢用戶信息，並保存到我們的數據庫<br>
4️⃣執行完 wxAuth 方法，因為我們數據庫已有用戶信息，所以最後會重定向到項目的統一認證登錄入口，並執行 execute 方法自動登入</p>
 <img data-src="https://i.makeagif.com/media/9-15-2015/bQkqor.gif" class="abc" width="600" height="350">
<div class="tags"><a href="/John/tags/SpringSecurity/" rel="tag"><i class="ic i-tag"></i>SpringSecurity</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i></span><span class="text">更新於</span><time title="修改時間：2023-11-08 14:56:45" itemprop="dateModified" datetime="2023-11-08T14:56:45+08:00">2023-11-08</time></span></div><div id="copyright"><ul><li class="author"><strong>作者：</strong>John<i class="ic i-at"><em>@</em></i>一切都是過程</li><li class="link"><strong>文章連結：</strong><a href="https://superrjohn.github.io/John/2023/11/03/java/SpringSecurity/WeChat_login" title="SpringSecurity 微信登錄">https://superrjohn.github.io/John/2023/11/03/java/SpringSecurity/WeChat_login</a></li><li class="license"><strong>版權聲明：</strong>本網誌所有文章除特別聲明外，均採用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" rel="noopener" target="_blank"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</a> 許可協議。轉載請註明出處！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/John/2023/10/30/java/SpringSecurity/SpringSecurity" rel="prev" itemprop="url" data-background-image="https:&#x2F;&#x2F;img-baofun.zhhainiao.com&#x2F;pcwallpaper_ugc&#x2F;live&#x2F;2c03b7318a776370f06dfc34c18de87b.mp4.jpg?x-oss-process&#x3D;image&#x2F;resize,type_6,m_fill,h_228,w_406" title="SpringSecurity 認證授權"><span class="type">上一篇</span><span class="category"><i class="ic i-flag"></i>SpringSecurity</span><h3>SpringSecurity 認證授權</h3></a></div><div class="item right"><a href="/John/2023/11/07/java/radis/redis_interview" rel="next" itemprop="url" data-background-image="https:&#x2F;&#x2F;www.wangluogeng.com&#x2F;static&#x2F;uploads&#x2F;20191228&#x2F;3918128f599ec041f8d7e71c993ac550.jpeg" title="Redis面試題整理"><span class="type">下一篇</span><span class="category"><i class="ic i-flag"></i>中間件</span><h3>Redis面試題整理</h3></a></div></div><div class="wrap" id="wcomments"></div><script type="module" data-pjax="data-pjax">import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';

setTimeout(function () {
    init({
        el: '#wcomments',
        serverURL: 'https://superr.zeabur.app',
        lang: 'zh-CN',
        locale: {},
        emoji: ["https://unpkg.com/@waline/emojis@1.0.1/weibo","https://unpkg.com/@waline/emojis@1.0.1/alus","https://unpkg.com/@waline/emojis@1.0.1/bilibili","https://unpkg.com/@waline/emojis@1.0.1/qq","https://unpkg.com/@waline/emojis@1.0.1/tieba","https://unpkg.com/@waline/emojis@1.0.1/tw-emoji"],
        meta: ["nick","mail","link"],
        requiredMeta: ["nick","mail"],
        wordLimit: 0,
        pageSize: 10,
        pageview: false,
        path: window.location.pathname,
        dark: 'html[data-theme="dark"]'
    });
}, 1000)</script></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目錄"><ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E9%A9%97%E8%AD%89%E7%A2%BC%E6%9C%8D%E5%8B%99"><span class="toc-number">1.</span> <span class="toc-text"> 驗證碼服務</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E9%83%A8%E7%BD%B2%E9%A9%97%E8%AD%89%E7%A2%BC%E6%9C%8D%E5%8B%99%E5%B7%A5%E7%A8%8B"><span class="toc-number">1.1.</span> <span class="toc-text"> 部署驗證碼服務工程</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E9%A9%97%E8%AD%89%E7%A2%BC%E4%BB%8B%E9%9D%A2%E6%B8%AC%E8%A9%A6"><span class="toc-number">1.2.</span> <span class="toc-text"> 驗證碼介面測試</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%B8%B3%E8%99%9F%E5%AF%86%E7%A2%BC%E8%AA%8D%E8%AD%89"><span class="toc-number">1.3.</span> <span class="toc-text"> 帳號密碼認證</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%B8%B3%E8%99%9F%E5%AF%86%E7%A2%BC%E8%AA%8D%E8%AD%89%E6%B8%AC%E8%A9%A6"><span class="toc-number">1.4.</span> <span class="toc-text"> 帳號密碼認證測試</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%BE%AE%E4%BF%A1%E6%8E%83%E7%A2%BC%E7%99%BB%E5%85%A5"><span class="toc-number">2.</span> <span class="toc-text"> 微信掃碼登入</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%8E%A5%E5%85%A5%E6%B5%81%E7%A8%8B"><span class="toc-number">2.1.</span> <span class="toc-text"> 接入流程</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%85%A5"><span class="toc-number">3.</span> <span class="toc-text"> 接入微信登入</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%8E%A5%E5%85%A5%E5%88%86%E6%9E%90"><span class="toc-number">3.1.</span> <span class="toc-text"> 接入分析</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%AE%9A%E7%BE%A9%E6%8E%A5%E5%8F%A3"><span class="toc-number">3.2.</span> <span class="toc-text"> 定義接口</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E8%AA%8D%E8%AD%89"><span class="toc-number">3.3.</span> <span class="toc-text"> 接入微信認證</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%84%B2%E5%AD%98%E4%BD%BF%E7%94%A8%E8%80%85%E8%B3%87%E8%A8%8A"><span class="toc-number">3.4.</span> <span class="toc-text"> 儲存使用者資訊</span></a></li></ol></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li ><a href="/John/2023/10/30/java/SpringSecurity/SpringSecurity" rel="bookmark" title="SpringSecurity 認證授權">SpringSecurity 認證授權</a></li><li  class="active"><a href="/John/2023/11/03/java/SpringSecurity/WeChat_login" rel="bookmark" title="SpringSecurity 微信登錄">SpringSecurity 微信登錄</a></li></ul></div><div class="overview panel" data-title="本站概要"><div class="author" itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="John" data-src="/John/assets/404.png"/><p class="name" itemprop="name">John</p><div class="description" itemprop="description"></div></div><nav class="state"><div class="item posts"><a href="/John/archives/"><span class="count">8</span><span class="name">文章</span></a></div><div class="item categories"><a href="/John/categories/"><span class="count">6</span><span class="name">分類</span></a></div><div class="item tags"><a href="/John/tags/"><span class="count">9</span><span class="name">標籤</span></a></div></nav><div class="social"><a href="https://github.com/superrjohn" class="item github" rel="noopener" title="https:&#x2F;&#x2F;github.com&#x2F;superrjohn" target="_blank"><i class="ic i-github"></i></a><a href="https://music.163.com/#/user/home?id=8923804515" class="item music" rel="noopener" title="https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;user&#x2F;home?id&#x3D;8923804515" target="_blank"><i class="ic i-cloud-music"></i></a><a href="https://www.youtube.com/@John-ql5uv" class="item youtube" rel="noopener" title="https:&#x2F;&#x2F;www.youtube.com&#x2F;@John-ql5uv" target="_blank"><i class="ic i-youtube"></i></a></div><div class="menu"><li class="item"><a href="/John/" rel="section"><i class="ic i-home"></i>首頁</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-user"></i>關於</a><ul class="submenu"><li class="item"><a href="/John/about/" rel="section"><i class="ic i-user"></i>關於本站</a></li></ul></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/John/archives/" rel="section"><i class="ic i-list-alt"></i>歸檔</a></li><li class="item"><a href="/John/categories/" rel="section"><i class="ic i-th"></i>分類</a></li><li class="item"><a href="/John/tags/" rel="section"><i class="ic i-tags"></i>標籤</a></li></ul></li></div></div></div></div><ul id="quick"><li class="prev pjax"><a href="/John/2023/11/07/java/radis/redis_interview" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/John/2023/10/30/java/SpringSecurity/SpringSecurity" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>隨機文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/John/categories/hexo/" title="分類於hexo">hexo</a></div><span><a href="/John/2023/10/22/hexo/Hexo">Hexo快速部署!</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/radis-rabbitmq/" title="分類於中間件">中間件</a></div><span><a href="/John/2023/10/26/java/rabbitmq/rabbitmq">Hello RabbitMq!</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/radis-rabbitmq/" title="分類於中間件">中間件</a></div><span><a href="/John/2023/11/07/java/radis/redis_interview">Redis面試題整理</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/radis-rabbitmq/" title="分類於中間件">中間件</a></div><span><a href="/John/2023/10/26/java/radis/radis">Redis 緩存優化</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/SpringSecurity/" title="分類於SpringSecurity">SpringSecurity</a></div><span><a href="/John/2023/10/30/java/SpringSecurity/SpringSecurity">SpringSecurity 認證授權</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/springMVC/" title="分類於springMVC">springMVC</a></div><span><a href="/John/2023/10/27/java/springMVC/UserBook-Web">手寫springMVC!</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/SpringSecurity/" title="分類於SpringSecurity">SpringSecurity</a></div><span><a href="/John/2023/11/03/java/SpringSecurity/WeChat_login">SpringSecurity 微信登錄</a></span></li><li class="item"><div class="breadcrumb"><a href="/John/categories/java/" title="分類於java">java</a><i class="ic i-angle-right"></i><a href="/John/categories/java/pay/" title="分類於支付">支付</a></div><span><a href="/John/2023/11/08/java/pay/alipay">整合支付寶</a></span></li></ul></div><div class="rpost pjax"><h2>最新評論</h2><ul class="leancloud-recent-comment" id="new-comment"><li class="item" v-for="com in coms"><a v-bind:href="root + com.href" data-pjax-state="data-pjax-state"><span class="breadcrumb">{{com.nick}} @ {{com.time}}</span><span>{{com.text}}<br/></span></a></li></ul></div></div><div class="status"><div class="copyright">&copy; 2022 -<span itemprop="copyrightYear">2023</span><span class="with-love"><i class="ic i-sakura rotate"></i></span><span class="author" itemprop="copyrightHolder">John @ john's blog</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i></span><span title="總字數">116k 字</span><span class="post-meta-divider">|</span><span class="post-meta-item-icon"><i class="ic i-coffee"></i></span><span title="所需總閱讀時間">1:45</span></div><div class="powered-by">基於 <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & Theme.<a href="https://github.com/theme-shoka-x/hexo-theme-shokaX/" rel="noopener" target="_blank">ShokaX</a></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL = {
        path: `2023/11/03/java/SpringSecurity/WeChat_login`,
        favicon: {
        show: `（●´3｀●）復活成功`,
        hide: `(´Д｀)瀏覽器崩潰啦`
    },
    search: {
        placeholder: "文章搜尋",
        empty: "關於 「 ${query} 」 ，什麼也沒搜到",
        stats: "${time} ms 內找到 ${hits} 條結果"
    },
    valine: true,
    chart: false,
    copy_tex: false,
    katex: false,
    mermaid: false,
    audio: undefined,
    fancybox: true,
    nocopy: false,
    outime: true,
    template: `<div class="note warning"><p><span class="label warning">文章時效性提示</span><br>這是一篇發佈於 {{publish}} 天前，最後一次更新在 {{updated}} 天前的文章，部分信息可能已經發生改變，請注意甄別。</p></div>`,
    quiz: {
        choice: `單選題`,
        multiple: `多選題`,
        true_false: `判斷題`,
        essay: `問答題`,
        gap_fill: `填空題`,
        mistake: `錯題備註`
    },
    ignores: [
        (uri) => uri.includes('#'),
        (uri) => new RegExp(LOCAL.path + '$').test(uri),
            []
    ]
};
</script><script src="https://polyfill.io/v3/polyfill.min.js?features=default,fetch"></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/pace/1.0.2/pace.min.js"></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/algoliasearch/4.12.1/algoliasearch-lite.umd.min.js"></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/instantsearch.js/4.39.0/instantsearch.production.min.js"></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/quicklink/2.2.0/quicklink.umd.min.js"></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/??jquery/3.5.1/jquery.min.js,fancybox/3.5.7/jquery.fancybox.min.js,justifiedGallery/3.8.1/js/jquery.justifiedGallery.min.js" async></script><script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-6-M/KaTeX/0.15.2/contrib/copy-tex.min.js" async></script><script src="/John/js/app.js?v=0.3.6"></script>
    <script type="module" data-pjax>
        let items = []
        import { RecentComments } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'
        RecentComments({
          serverURL: 'https://superr.zeabur.app',
          count: 10,
        }).then(({ comments }) => {
          comments.forEach(function (item) {
              let cText = (item.orig.length > 50) ? item.orig.substring(0,50)+'...' : item.orig
              item.url = item.url !== '/' ?  '/' + item.url : item.url;
              const siteLink = item.url + "#" + item.objectId
              items.push({
                  href: siteLink,
                  nick: item.nick,
                  time: item.insertedAt.split('T').shift(),
                  text: cText
              })
          })
          Vue.createApp({
            data() {
                return {
                    coms: items,
                    root: '/John'
                }
            }
          }).mount('#new-comment')
        }).catch(function (err) {
          console.error(err)
        })
    </script>
    </body></html>