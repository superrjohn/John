<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>一切都是過程 • Posts by &#34;java&#34; category</title>
        <link>https://superrjohn.github.io/John</link>
        <description></description>
        <language>zh-TW</language>
        <pubDate>Mon, 30 Oct 2023 22:10:06 +0800</pubDate>
        <lastBuildDate>Mon, 30 Oct 2023 22:10:06 +0800</lastBuildDate>
        <category>hexo</category>
        <category>java</category>
        <category>SpringSecurity</category>
        <category>RabbitMQ</category>
        <category>Radis</category>
        <category>SpringMVC</category>
        <category>Pinia</category>
        <category>Vue2</category>
        <category>SpringBoot</category>
        <item>
            <guid isPermalink="true">https://superrjohn.github.io/John/2023/10/30/java/SpringSecurity/SpringSecurity</guid>
            <title>SpringSecurity 認證授權</title>
            <link>https://superrjohn.github.io/John/2023/10/30/java/SpringSecurity/SpringSecurity</link>
            <category>SpringSecurity</category>
            <pubDate>Mon, 30 Oct 2023 22:10:06 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在此特别感謝黑馬程序員提供的課程: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWo4NDExTjdCbS8=&#34;&gt;學成在線&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;前言&lt;br&gt;
於由實習項目快做完才做記錄，而且項目模塊較多，故挑部份來記錄，所以這遍主要是 SpringSecurity 內容。&lt;br&gt;
&lt;span class=&#34;rainbow&#34;&gt;完整项目地址&lt;/span&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N1cGVycmpvaG4vamF2YV93ZWI=&#34;&gt;https://github.com/superrjohn/java_web&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;模塊需求分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模塊需求分析&#34;&gt;#&lt;/a&gt; 模塊需求分析&lt;/h1&gt;
&lt;p&gt;什麼是認證授權？&lt;br&gt;
&lt;span class=&#34;yellow&#34;&gt; 什麼是認證？&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;認證即使用者去存取系統資源時系統要求驗證使用者的身分訊息，身分合法方可繼續存取。 常見的用戶身份認證的表現形式有：用戶名密碼登錄，微信掃碼等方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;什麼是授權？&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;使用者認證通過後去存取系統的資源，系統會判斷使用者是否擁有存取資源的權限，只允許存取有權限的系統資源，沒有權限的資源將無法存取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;業務流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#業務流程&#34;&gt;#&lt;/a&gt; 業務流程&lt;/h2&gt;
&lt;p&gt;1️⃣統一認證：計畫包括學生、學習機構的老師、平台營運人員三類用戶，三類用戶將使用統一的認證入口。&lt;/p&gt;
 &lt;img data-src=&#34;/John/img/java/SpringSecurity/2.png&#34; class=&#34;abc&#34; width=&#34;600&#34; height=&#34;350&#34;&gt;
&lt;p&gt;2️⃣單點登陸：單一登入（Single Sign On），簡稱 SSO，是目前較流行的企業業務整合的解決方案之一。 SSO 的定義是在多個應用系統中，使用者只需要登入一次就可以存取所有互信的應用系統。&lt;/p&gt;
&lt;p&gt;3️⃣第三方認證：掃碼登入的功能，如：微信掃碼登入、QQ 掃碼登入等。 掃碼登入的好處是用戶不用輸入帳號和密碼，省去用戶註冊的成本，是一種非常有效的推廣手段。&lt;/p&gt;
&lt;h1 id=&#34;spring-security-認證研究&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spring-security-認證研究&#34;&gt;#&lt;/a&gt; Spring Security 認證研究&lt;/h1&gt;
&lt;h2 id=&#34;spring-security介紹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spring-security介紹&#34;&gt;#&lt;/a&gt; Spring Security 介紹&lt;/h2&gt;
&lt;p&gt;認證功能幾乎是每個專案都要具備的功能，而且它與業務無關，市面上有許多認證框架，例如：Apache Shiro、CAS、Spring Security 等。 由於本專案是基於 Spring Cloud 技術構建，Spring Security 是 spring 家族的一份子且和 Spring Cloud 整合的很好，因此本專案選用 Spring Security 作為認證服務的技術框架。&lt;/p&gt;
&lt;p&gt;Spring Security 是一個功能強大且高度可自訂的身份驗證和存取控制框架，它是一個專注於為 Java 應用程式提供身份驗證和授權的框架。&lt;/p&gt;
&lt;p&gt;專案首頁：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLXNlY3VyaXR5&#34;&gt;https://spring.io/projects/spring-security&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Spring cloud Security： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWNsb3VkLXNlY3VyaXR5&#34;&gt;https://spring.io/projects/spring-cloud-security&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;認證授權入門&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#認證授權入門&#34;&gt;#&lt;/a&gt; 認證授權入門&lt;/h3&gt;
&lt;p&gt;1️⃣部署認證服務工程&lt;/p&gt;
&lt;p&gt;從課程資料拷貝 xuecheng-plus-auth 工程到自己的工程目錄下。&lt;/p&gt;
&lt;p&gt;此工程是一個普通的 spring boot 工程，可以連接資料庫。&lt;/p&gt;
&lt;p&gt;此工程不具備認證授權的功能。&lt;/p&gt;
&lt;p&gt;2️⃣建立資料庫&lt;/p&gt;
&lt;p&gt;建立 xc_users 資料庫&lt;/p&gt;
&lt;p&gt;匯入課程資料中的 xcplus_users.sql 腳本。&lt;/p&gt;
&lt;p&gt;3️⃣修改配置文件和在 nacos 註冊，端口為 63070&lt;/p&gt;
&lt;h3 id=&#34;認證測試&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#認證測試&#34;&gt;#&lt;/a&gt; 認證測試&lt;/h3&gt;
&lt;p&gt;1️⃣下邊向 auth 認證工程整合 Spring security，向 pom.xml 加入 Spring Security 所需的依賴&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-security&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-oauth2&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2️⃣初始工程自備了一個 Controller 類，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@RestController&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LoginController&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  XcUserMapper userMapper; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/login-success&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;loginSuccess&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;登录成功&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/user/&amp;#123;id&amp;#125;&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; XcUser &lt;span class=&#34;title function_&#34;&gt;getuser&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@PathVariable(&amp;quot;id&amp;quot;)&lt;/span&gt; String id)&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;XcUser&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;xcUser&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; userMapper.selectById(id); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; xcUser; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/r/r1&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;r1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;访问r1资源&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/r/r2&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;r2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;访问r2资源&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3️⃣在資料中找到 WebSecurityConfig 設定類放到本工程中，它繼承 WebSecurityConfigurerAdapter, 它有三部份內容:&lt;br&gt;
1. 用戶資訊：在記憶體配置兩個使用者：zhangsan、lisi,zhangsan 使用者擁有的權限為 p1,lisi 使用者擁有的權限為 p2&lt;/p&gt;
&lt;p&gt;2、密碼方式：暫時採用明文方式&lt;/p&gt;
&lt;p&gt;3. 安全攔截機制:/r/** 開頭的請求需要認證，登入成功到成功頁面，程式碼如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//配置用户信息服务 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; UserDetailsService &lt;span class=&#34;title function_&#34;&gt;userDetailsService&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//这里配置用户信息,这里暂时使用这种方式将用户存储在内存中 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;InMemoryUserDetailsManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;manager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;InMemoryUserDetailsManager&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        manager.createUser(User.withUsername(&lt;span class=&#34;string&#34;&gt;&amp;quot;zhangsan&amp;quot;&lt;/span&gt;).password(&lt;span class=&#34;string&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;).authorities(&lt;span class=&#34;string&#34;&gt;&amp;quot;p1&amp;quot;&lt;/span&gt;).build()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        manager.createUser(User.withUsername(&lt;span class=&#34;string&#34;&gt;&amp;quot;lisi&amp;quot;&lt;/span&gt;).password(&lt;span class=&#34;string&#34;&gt;&amp;quot;456&amp;quot;&lt;/span&gt;).authorities(&lt;span class=&#34;string&#34;&gt;&amp;quot;p2&amp;quot;&lt;/span&gt;).build()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; manager; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; PasswordEncoder &lt;span class=&#34;title function_&#34;&gt;passwordEncoder&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//密码为明文方式 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; NoOpPasswordEncoder.getInstance(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//配置安全拦截机制 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;configure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HttpSecurity http)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        http &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .authorizeRequests() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .antMatchers(&lt;span class=&#34;string&#34;&gt;&amp;quot;/r/**&amp;quot;&lt;/span&gt;).authenticated()&lt;span class=&#34;comment&#34;&gt;//访问/r开始的请求需要认证通过 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .anyRequest().permitAll()&lt;span class=&#34;comment&#34;&gt;//其它请求全部放行 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .and() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .formLogin().successForwardUrl(&lt;span class=&#34;string&#34;&gt;&amp;quot;/login-success&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//登录成功跳转到/login-success &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                http.logout().logoutUrl(&lt;span class=&#34;string&#34;&gt;&amp;quot;/logout&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//退出地址 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1. 訪問 localhost:63070/auth/login&lt;br&gt;
2. 輸入帳號 zhangsan, 密碼 123&lt;br&gt;
3. 登錄成功後，頁面會跳轉，這樣認證身份就完成了&lt;/p&gt;
&lt;p&gt;4️⃣添加授權&lt;br&gt;
🔴使用者認證透過去存取系統資源時 spring security 進行授權控制，判斷使用者是否有該資源的存取權限，如果有則繼續訪問，如果沒有則拒絕存取。&lt;br&gt;
1. 在 WebSecurityConfig 類別設定 zhangsan 擁有 p1 權限，lisi 擁有 p2 權限。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; UserDetailsService &lt;span class=&#34;title function_&#34;&gt;userDetailsService&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//这里配置用户信息,这里暂时使用这种方式将用户存储在内存中 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;InMemoryUserDetailsManager&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;manager&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;InMemoryUserDetailsManager&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    manager.createUser(User.withUsername(&lt;span class=&#34;string&#34;&gt;&amp;quot;zhangsan&amp;quot;&lt;/span&gt;).password(&lt;span class=&#34;string&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;).authorities(&lt;span class=&#34;string&#34;&gt;&amp;quot;p1&amp;quot;&lt;/span&gt;).build()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    manager.createUser(User.withUsername(&lt;span class=&#34;string&#34;&gt;&amp;quot;lisi&amp;quot;&lt;/span&gt;).password(&lt;span class=&#34;string&#34;&gt;&amp;quot;456&amp;quot;&lt;/span&gt;).authorities(&lt;span class=&#34;string&#34;&gt;&amp;quot;p2&amp;quot;&lt;/span&gt;).build()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; manager; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2. 在 controller 中配置 /r/r1 需要 p1 權限，/r/r2 需要 p2 權限。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@RestController&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LoginController&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/r/r1&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@PreAuthorize(&amp;quot;hasAuthority(&amp;#x27;p1&amp;#x27;)&amp;quot;)&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//拥有p1权限方可访问 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;r1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;访问r1资源&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@RequestMapping(&amp;quot;/r/r2&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@PreAuthorize(&amp;quot;hasAuthority(&amp;#x27;p2&amp;#x27;)&amp;quot;)&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//拥有p2权限方可访问 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;r2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;访问r2资源&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ... &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在當用戶訪問 /r/r1 時，url 會判斷用戶有沒有訪問權限 p1, 所以 zhangsan 可以成功訪問，而 lisi 不能，因為 lisi 的權限為 p2&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/r1r2.png&#34; class=&#34;abc&#34;&gt;
&lt;p&gt;5️⃣工作原理&lt;br&gt;
 Spring Security 對 Web 資源的保護是靠 Filter 實現的，所以從這個 Filter 來入手，逐步深入 Spring Security 原理。 當初始化 Spring Security 時，會建立一個名為 SpringSecurityFilterChain 的 Servlet 過濾器，類型為 org.springframework.security.web.FilterChainProxy，它實作了 javax.servlet.Filter，因此外部的要求會經過此類，下圖是 Spring Security 過慮器鏈結構圖：&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/3.png&#34; class=&#34;abc&#34; width=&#34;400&#34; height=&#34;300&#34;&gt;
&lt;p&gt;FilterChainProxy 是一個代理，真正運作的是 FilterChainProxy 中 SecurityFilterChain 所包含的各個 Filter，而 Filter 不會直接處理認證和授權，而是把它們交給了認證管理器（AuthenticationManager）和決策管理器（AccessDecisionManager）進行處理。&lt;/p&gt;
&lt;h1 id=&#34;oauth2認證流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oauth2認證流程&#34;&gt;#&lt;/a&gt; OAuth2 認證流程&lt;/h1&gt;
&lt;p&gt;在前邊我們提到微信掃碼認證，這是一種第三方認證的方式，這種認證方式是基於 OAuth2 協定實現，&lt;/p&gt;
&lt;p&gt;OAUTH 協定為使用者資源的授權提供了一個安全的、開放而又簡易的標準。 同時，任何第三方都可以使用 OAUTH 認證服務，任何服務提供者都可以實現自身的 OAUTH 認證服務，因而 OAUTH 是開放的。 業界提供了 OAUTH 的多種實作如 PHP、JavaScript，Java，Ruby 等各種語言開發包，大大節省了程式設計師的時間，因而 OAUTH 是簡易的。 網路許多服務如 Open API，許多大公司如穀歌，Yahoo，Microsoft 等都提供了 OAUTH 認證服務，這些都足以說明 OAUTH 標準逐漸成為開放資源授權的標準。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     Oauth協定目前發展到2.0版本，1.0版本過於複雜，2.0版本已廣泛應用。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;參考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9vQXV0aC83MTUzMTM0P2ZyPWFsYWRkaW4=&#34;&gt;https://baike.baidu.com/item/oAuth/7153134?fr=aladdin&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Oauth 協議：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NDk=&#34;&gt;https://tools.ietf.org/html/rfc6749&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;現在搞清楚幾個概念：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;green&#34;&gt;資源&lt;/span&gt;：使用者訊息，在微信中儲存。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;green&#34;&gt;資源擁有者&lt;/span&gt;：使用者是使用者資訊資源的擁有者。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;green&#34;&gt;認證服務&lt;/span&gt;：微信負責認證目前使用者的身份，負責為客戶端頒發令牌。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;green&#34;&gt;客戶端&lt;/span&gt;：客戶端會攜帶令牌請求微信獲取使用者訊息，黑馬程式設計師網站即客戶端，黑馬網站需要在瀏覽器中開啟。&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/4.png&#34; class=&#34;abc&#34; width=&#34;700&#34; height=&#34;300&#34;&gt;
&lt;p&gt;1. 用戶進入到網站打開掃碼界面，進行微信掃碼&lt;br&gt;
 2. 微信返回信息，詢問用戶是否授權客戶端使用個人資料，用戶按同意&lt;br&gt;
 3. 微信下發授權碼，網站應用帶著授權碼申請令牌，微信下發令牌 (過程不可見)&lt;br&gt;
 4. 網站應用帶著令牌請求用戶個人信息，成功並返回網站應用 (過程不可見)&lt;br&gt;
 5. 用戶登錄成功&lt;/p&gt;
&lt;h2 id=&#34;oauth2在本項目的應用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oauth2在本項目的應用&#34;&gt;#&lt;/a&gt; OAuth2 在本項目的應用&lt;/h2&gt;
&lt;p&gt;了解微信掃碼登入黑馬網站的流程，接下來認識 Oauth2.0 的認證流程，引自 Oauth2.0 協定 rfc6749 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NDk=&#34;&gt;https://tools.ietf.org/html/rfc6749&lt;/span&gt; ,&lt;br&gt;
Oauth2 是一個標準的開放的授權協議，用於應用程式需要用到第三方平台的資源，應用程式可以根據自己的要求去使用 Oauth2，本專案使用 Oauth2 實現以下目標：&lt;br&gt;
1️⃣學成在線上存取第三方系統的資源。&lt;/p&gt;
&lt;p&gt;本專案要存取微信掃碼登入所以本專案要使用 OAuth2 協定存取微信中的使用者資訊。&lt;/p&gt;
&lt;p&gt;2️⃣外部系統訪問學成在線的資源 。&lt;/p&gt;
&lt;p&gt;同樣當第三方系統想要存取學成線上網站的資源也可以基於 OAuth2 協議。&lt;/p&gt;
&lt;p&gt;3️⃣學成線上前端（客戶端） 存取學成線上微服務的資源。&lt;/p&gt;
&lt;p&gt;本專案是前後端分離架構，前端存取微服務資源也可以基於 OAuth2 協定進行認證。&lt;/p&gt;
&lt;h2 id=&#34;oauth2的授權模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oauth2的授權模式&#34;&gt;#&lt;/a&gt; OAuth2 的授權模式&lt;/h2&gt;
&lt;p&gt;Spring Security 支援 OAuth2 認證，OAuth2 提供授權碼模式、密碼模式、簡化模式、客戶端模式等四種授權模式，本項目只會用授權碼模式、密碼模式。&lt;br&gt;
授權碼模式簡單瞭解是使用授權碼去取得令牌，要想取得令牌先要取得授權碼，授權碼的取得需要資源擁有者親自授權同意才可以取得。&lt;/p&gt;
&lt;p&gt;下圖是授權碼模式的互動圖：&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/5.png&#34; class=&#34;abc&#34; width=&#34;600&#34; height=&#34;400&#34;&gt;
&lt;h3 id=&#34;授權碼模式測試&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#授權碼模式測試&#34;&gt;#&lt;/a&gt; 授權碼模式測試&lt;/h3&gt;
&lt;p&gt;若要測試授權模式首先要設定授權伺服器即上圖中的認證伺服器，需要設定授權服務及令牌策略。&lt;br&gt;
1️⃣從課程資料拷貝 AuthorizationServer.java、TokenConfig.java 到認證服務的 config 套件下。&lt;br&gt;
說明：AuthorizationServer 用 @EnableAuthorizationServer 註解標識並繼承 AuthorizationServerConfigurerAdapter 來設定 OAuth2.0 授權伺服器。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Configuration&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@EnableAuthorizationServer&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AuthorizationServer&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AuthorizationServerConfigurerAdapter&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2️⃣AuthorizationServerConfigurerAdapter 要求配置以下幾個類別：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AuthorizationServerConfigurerAdapter&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AuthorizationServerConfigurer&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;AuthorizationServerConfigurerAdapter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;configure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AuthorizationServerSecurityConfigurer security)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;configure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ClientDetailsServiceConfigurer clients)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;configure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(AuthorizationServerEndpointsConfigurer endpoints)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1）ClientDetailsServiceConfigurer：用來設定客戶端詳情服務（ClientDetailsService），&lt;/p&gt;
&lt;p&gt;隨便一個客戶端都可以隨便接取它的認證服務嗎？ 答案是否定的，服務提供者會給批准存取的客戶端一個身份，用於存取時的憑證，有客戶端標識和客戶端秘鑰，在這裡配置批准存取的客戶端的詳細資訊。&lt;/p&gt;
&lt;p&gt;2）AuthorizationServerEndpointsConfigurer：用來設定令牌（token）的存取端點和令牌服務 (token services)。&lt;/p&gt;
&lt;p&gt;3）AuthorizationServerSecurityConfigurer：用來設定令牌端點的安全性限制.&lt;/p&gt;
&lt;p&gt;2、TokenConfig 為令牌策略配置類&lt;/p&gt;
&lt;p&gt;暫時先使用 InMemoryTokenStore 在記憶體儲存令牌，令牌的有效期限等資訊配置如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//令牌管理服务 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Bean(name=&amp;quot;authorizationServerTokenServicesCustom&amp;quot;)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; AuthorizationServerTokenServices &lt;span class=&#34;title function_&#34;&gt;tokenService&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DefaultTokenServices service=&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DefaultTokenServices&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    service.setSupportRefreshToken(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//支持刷新令牌 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    service.setTokenStore(tokenStore);&lt;span class=&#34;comment&#34;&gt;//令牌存储策略 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    service.setAccessTokenValiditySeconds(&lt;span class=&#34;number&#34;&gt;7200&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 令牌默认有效期2小时 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    service.setRefreshTokenValiditySeconds(&lt;span class=&#34;number&#34;&gt;259200&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 刷新令牌默认有效期3天 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; service; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3️⃣配置認證管理 bean&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@EnableWebSecurity&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@EnableGlobalMethodSecurity(securedEnabled = true,prePostEnabled = true)&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WebSecurityConfig&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; AuthenticationManager &lt;span class=&#34;title function_&#34;&gt;authenticationManagerBean&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.authenticationManagerBean(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .... &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4️⃣重啟認證服務&lt;/p&gt;
&lt;p&gt;1.get 請求取得授權碼&lt;/p&gt;
&lt;p&gt;位址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo2MzA3MC9hdXRoL29hdXRoL2F1dGhvcml6ZT9jbGllbnRfaWQ9WGNXZWJBcHAmYW1wO3Jlc3BvbnNlX3R5cGU9Y29kZSZhbXA7c2NvcGU9YWxsJmFtcDtyZWRpcmVjdF91cmk9aHR0cDovL3d3dy41MXh1ZWNoZW5nLmNu&#34;&gt;http://localhost:63070/auth/oauth/authorize?client_id=XcWebApp&amp;amp;response_type=code&amp;amp;scope=all&amp;amp;redirect_uri=http://www.51xuecheng.cn&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;參數列表如下：&lt;/p&gt;
&lt;p&gt;client_id：客戶端准入標識。&lt;/p&gt;
&lt;p&gt;response_type：授權碼模式固定為 code。&lt;/p&gt;
&lt;p&gt;scope：客戶端權限。&lt;/p&gt;
&lt;p&gt;redirect_uri：跳轉 uri，授權碼申請成功後會跳到此位址，後邊帶上 code 參數（授權碼）。&lt;/p&gt;
&lt;p&gt;輸入帳號 zhangsan、密碼 123 登入成功，輸入 /oauth/authorize?client_id=XcWebApp&amp;amp;response_type=code&amp;amp;scope=all&amp;amp;redirect_uri=&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy41MXh1ZWNoZW5nLmNu&#34;&gt;http://www.51xuecheng.cn&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;顯示授權頁面&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/6.png&#34; class=&#34;abc&#34;&gt;
&lt;p&gt;授權「XcWebApp」存取自己的受保護資源？&lt;/p&gt;
&lt;p&gt;選擇同意。&lt;/p&gt;
&lt;p&gt;2. 請求成功，重新導向至&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy41MXh1ZWNoZW5nLmNuLz9jb2RlPSVFNiU4RSU4OCVFNiVBQyU4QSVFNyVBMiVCQyVFRiVCQyU4QyVFNCVCRSU4QiVFNSVBNiU4MiVFRiVCQyU5QWh0dHA6Ly93d3cuNTF4dWVjaGVuZy5jbi8/Y29kZT1XcWpiNUg=&#34;&gt; http://www.51xuecheng.cn/?code = 授權碼，例如：http://www.51xuecheng.cn/?code=Wqjb5H&lt;/span&gt;&lt;br&gt;
3. 使用 httpclient 工具 post 申請令牌&lt;/p&gt;
&lt;p&gt;/oauth/token?client_id=XcWebApp&amp;amp;client_secret=XcWebApp&amp;amp;grant_type=authorization_code&amp;amp;code = 授權碼 &amp;amp; redirect_uri=&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy41MXh1ZWNoZW5nLmNuLw==&#34;&gt;http://www.51xuecheng.cn/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;參數列表如下&lt;/p&gt;
&lt;p&gt;client_id：客戶端准入標識。&lt;/p&gt;
&lt;p&gt;client_secret：客戶端秘鑰。&lt;/p&gt;
&lt;p&gt;grant_type：授權類型，填入 authorization_code，表示授權碼模式&lt;/p&gt;
&lt;p&gt;code：授權碼，就是剛剛取得的授權碼，注意：授權碼只使用一次就無效了，需要重新申請。&lt;/p&gt;
&lt;p&gt;redirect_uri：申請授權碼時的跳到 url，一定和申請授權碼時用的 redirect_uri 一致。&lt;/p&gt;
&lt;p&gt;httpclient 腳本如下：&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;figcaption&gt;&lt;span&gt;text&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;### 第二步申请令牌 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;POST &amp;#123;&amp;#123;auth_host&amp;#125;&amp;#125;/auth/oauth/token?client_id=XcWebApp&amp;amp;client_secret=XcWebApp&amp;amp;grant_type=authorization_code&amp;amp;code=CTvCrB&amp;amp;redirect_uri=http://www.51xuecheng.cn1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;申請令牌成功如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;368b1ee7-a9ee-4e9a-aae6-0fcab243aad2&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;token_type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;bearer&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;refresh_token&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;3d56e139-0ee6-4ace-8cbe-1311dfaa991f&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;expires_in&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7199&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;scope&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;說明：&lt;br&gt;
1、access_token，存取令牌，用於存取資源使用。&lt;br&gt;
2、token_type，bearer 是在 RFC6750 中定義的一種 token 類型，在攜帶令牌存取資源時需要在 head 中加入 bearer 空格 令牌內容&lt;br&gt;
 3、refresh_token，當令牌快過期時使用刷新令牌可以再次產生令牌。&lt;br&gt;
4、expires_in：過期時間（秒）&lt;br&gt;
5、scope，令牌的權限範圍，服務端可以根據令牌的權限範圍去對令牌授權。&lt;/p&gt;
&lt;h3 id=&#34;密碼模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密碼模式&#34;&gt;#&lt;/a&gt; 密碼模式&lt;/h3&gt;
&lt;p&gt;密碼模式相對授權碼模式簡單，授權碼模式需使用瀏覽器供使用者親自授權，密碼模式不用使用瀏覽器&lt;br&gt;
 1. 資源擁有者提供帳號及密碼&lt;/p&gt;
&lt;p&gt;2、客戶端向認證服務申請令牌，請求中攜帶帳號及密碼&lt;/p&gt;
&lt;p&gt;3、認證服務校驗帳號及密碼正確核發令牌。&lt;br&gt;
1、POST 請求取得令牌&lt;/p&gt;
&lt;p&gt;/oauth/token?client_id=XcWebApp&amp;amp;client_secret=XcWebApp&amp;amp;grant_type=password&amp;amp;username=shangsan&amp;amp;password=123&lt;/p&gt;
&lt;p&gt;參數列表如下：&lt;/p&gt;
&lt;p&gt;client_id：客戶端准入標識。&lt;/p&gt;
&lt;p&gt;client_secret：客戶端秘鑰。&lt;/p&gt;
&lt;p&gt;grant_type：授權類型，填入 password 表示密碼模式&lt;/p&gt;
&lt;p&gt;username：資源擁有者使用者名稱。&lt;/p&gt;
&lt;p&gt;password：資源擁有者密碼。&lt;/p&gt;
&lt;p&gt;2、授權伺服器將令牌（access_token）傳送給 client&lt;/p&gt;
&lt;p&gt;使用 httpclient 進行測試&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;### 密码模式 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;POST &amp;#123;&amp;#123;auth_host&amp;#125;&amp;#125;/auth/oauth/token?client_id=XcWebApp&amp;amp;client_secret=XcWebApp&amp;amp;grant_type=password&amp;amp;username=zhangsan&amp;amp;password=&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回示例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;368b1ee7-a9ee-4e9a-aae6-0fcab243aad2&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;token_type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;bearer&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;refresh_token&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;3d56e139-0ee6-4ace-8cbe-1311dfaa991f&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;expires_in&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6806&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;scope&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;jwt令牌&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jwt令牌&#34;&gt;#&lt;/a&gt; JWT 令牌&lt;/h1&gt;
&lt;h2 id=&#34;普通令牌的問題&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#普通令牌的問題&#34;&gt;#&lt;/a&gt; 普通令牌的問題&lt;/h2&gt;
&lt;p&gt;客戶端申請到令牌，接下來客戶端攜帶令牌去存取資源，到資源伺服器將會校驗令牌的合法性。&lt;br&gt;
資源伺服器如何校驗令牌的合法性？我們以 OAuth2 的密碼模式為例進行說明：&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/7.png&#34; class=&#34;abc&#34; width=&#34;700&#34; height=&#34;400&#34;&gt;
&lt;p&gt;🍉這裡存在一個問題：&lt;br&gt;
就是校驗令牌需要遠端請求認證服務，客戶端的每次存取都會遠端校驗，執行效能低。&lt;br&gt;
如果能夠讓資源服務自己校驗令牌的合法性將省去遠端請求認證服務的成本，提高了效能&lt;/p&gt;
&lt;p&gt;🍉如何解決上邊的問題，實現資源服務自行校驗令牌:&lt;/p&gt;
&lt;h2 id=&#34;什么是jwt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是jwt&#34;&gt;#&lt;/a&gt; 什么是 JWT&lt;/h2&gt;
&lt;p&gt;🟢令牌採用 JWT 格式即可解決上邊的問題，用戶認證通過後會得到一個 JWT 令牌，JWT 令牌中已經包括了用戶相關的信息，客戶端只需要攜帶 JWT 訪問資源服務，資源服務根據事先約定 的演算法自行完成令牌校驗，無需每次都請求認證服務完成授權。&lt;/p&gt;
&lt;p&gt;🟡JSON Web Token（JWT）是一種使用 JSON 格式傳遞資料的網路令牌技術，它是一個開放的行業標準（RFC 7519），它定義了一種簡潔的、自包含的協議格式，用於在通信 雙方傳遞 json 對象，傳遞的訊息經過數位簽章可以驗證和信任，它可以使用 HMAC 演算法或使用 RSA 的公鑰 / 私鑰對來簽名，防止內容篡改。 官網：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qd3QuaW8v&#34;&gt;https://jwt.io/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;🔴傳統的基於 session 的方式是有狀態認證，使用者登入成功將使用者的身份資訊儲存在服務端，這樣加大了服務端的儲存壓力，並且這種方式不適合在分散式系統中應用。&lt;br&gt;
如下圖，當用戶訪問應用服務，每個應用服務都會去伺服器查看 session 信息，如果 session 中沒有該用戶則說明用戶沒有登錄，此時就會重新認證，而解決這個問題的方法是 Session 複製、Session 黏貼。&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/SpringSecurity/8.png&#34; class=&#34;abc&#34; width=&#34;700&#34; height=&#34;400&#34;&gt;
&lt;p&gt;🟢如果是基於令牌技術在分散式系統中實現認證則服務端不用儲存 session，可以將用戶識別資訊儲存在令牌中，用戶認證透過後認證服務頒發令牌給用戶，用戶將令牌儲存在客戶 端，去訪問應用服務時攜帶令牌去訪問，服務端從 jwt 解析出用戶資訊。 這個過程就是無狀態認證。&lt;/p&gt;
&lt;p&gt;JWT 令牌的優點：&lt;br&gt;
1️⃣jwt 基於 json，非常方便解析。&lt;br&gt;
2️⃣可以在令牌中自訂豐富的內容，易擴充。&lt;br&gt;
3️⃣透過非對稱加密演算法及數位簽章技術，JWT 防止竄改，安全性高。&lt;br&gt;
4️⃣資源服務使用 JWT 可不依賴認證服務即可完成授權。&lt;br&gt;
缺點：&lt;br&gt;
JWT 令牌較長，佔儲存空間比較大。&lt;/p&gt;
&lt;p&gt;JWT 令牌由三部分組成，每部分中間使用点（.）分隔，比如：xxxxx.yyyyy.zzzzz&lt;br&gt;
1️⃣Header&lt;br&gt;
 頭部包括令牌的類型（即 JWT）及使用的哈希算法（如 HMAC SHA256 或 RSA）&lt;br&gt;
内容使用 Base64Url 编码，得到一个字符串就是 JWT 令牌的第一部分。&lt;/p&gt;
  &lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;alg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;HS256&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;typ&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;JWT&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2️⃣Payload&lt;br&gt;
 第二部分是負載，內容也是一個 json 對象，它是存放有效資訊的地方，它可以存放 jwt 提供的資訊字段，例如：iss（簽發者）,exp（過期時間戳記）, sub（面向的使用者） 等，也可自訂欄位。&lt;br&gt;
此部分不建議存放敏感訊息，因為此部分可以解碼還原原始內容。&lt;br&gt;
最後將第二部分負載使用 Base64Url 編碼，得到一個字串就是 JWT 令牌的第二部分。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;sub&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1234567890&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;456&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3️⃣Signature&lt;br&gt;
 第三部分是簽名，此部分用於防止 jwt 內容被竄改。&lt;br&gt;
這個部分使用 base64url 將前兩部分編碼，編碼後使用點（.）連接組成字串，最後使用 header 中聲明的簽章演算法進行簽章。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HMACSHA256( &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  base64UrlEncode(header) + &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  base64UrlEncode(payload)&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  secret) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span class=&#34;green&#34;&gt;為什麼 JWT 可以防止篡改？&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;第三部分使用簽名演算法對第一部分和第二部分的內容進行簽名，常用的簽名演算法是 HS256，常見的還有 md5,sha 等，簽名演算法需要使用金鑰進行簽名，金鑰不對外公開，且 簽章是不可逆的，如果第三方更改了內容那麼伺服器驗證簽章就會失敗，要想保證驗證簽章正確必須保證內容、金鑰與簽章前一致。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://superrjohn.github.io/John/2023/10/27/java/springMVC/UserBook-Web</guid>
            <title>手寫springMVC!</title>
            <link>https://superrjohn.github.io/John/2023/10/27/java/springMVC/UserBook-Web</link>
            <category>SpringMVC</category>
            <category>Pinia</category>
            <category>Vue2</category>
            <category>SpringBoot</category>
            <pubDate>Fri, 27 Oct 2023 17:24:46 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;初學階段全端的一個項目，是一個簡單的用戶端圖書管理系統，登錄用 jwt 令牌實現。&lt;br&gt;
前端是用 Vue2、Pinia 做狀態管理、bootstrap 5 (不推薦)、Axios。&lt;br&gt;
後端用 SpringMVC、SpringBoot、Mybatis、MySQL。&lt;br&gt;
於由就是一個很久之前的項目，而且項目結構很簡單只是練練手，現在只是補寫一個記錄，所以我就不每個步驟記錄，只記錄重點～&lt;br&gt;
 項目地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N1cGVycmpvaG4vVXNlckJvb2stV2Vi&#34;&gt;https://github.com/superrjohn/UserBook-Web&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;邏輯圖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#邏輯圖&#34;&gt;#&lt;/a&gt; 邏輯圖&lt;/h2&gt;
&lt;p&gt;做項目、模塊、業務功能一定要先寫邏輯圖，一來理清邏輯步驟，二來跟著步驟做開發。(雖然這圖寫得不太優)&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/springMVC/logic_diagram.png&#34; class=&#34;abc&#34; width=&#34;400&#34; height=&#34;700&#34;&gt;
&lt;h2 id=&#34;前端&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前端&#34;&gt;#&lt;/a&gt; 前端&lt;/h2&gt;
&lt;p&gt;前端方面，我想記錄的是&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9waW5pYS52dWVqcy5vcmcvemgvaW50cm9kdWN0aW9uLmh0bWw=&#34;&gt; Pinia&lt;/span&gt; 狀態管理庫，會以 Vue2 做簡單說明。&lt;br&gt;
1️⃣創一個 Pinia 實例并掛載到 Vue, 如果是 Vue 2 還需要安装一个插件 PiniaVuePlugin, 如果想擁有持久化，需要安裝 pinia-plugin-persistedstate 插件。&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/springMVC/create_pinia.png&#34; class=&#34;abc&#34; width=&#34;600&#34; height=&#34;500&#34;&gt;
&lt;p&gt;2️⃣Store 可以理解成要狀態管理的對象，它有三個重要的部份組成，分別是 state、getter 和 action, 本項目只用到 state、action,state 是屬性，而 action 是改變屬性的方法，我封裝了根據用戶 ID 發起查詢借書記錄的 API, 而 persist 為 true 開啟持久化。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;useBookStatus.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &amp;#123; defineStore &amp;#125; from &lt;span class=&#34;string&#34;&gt;&amp;#x27;pinia&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &amp;#123; userAPI &amp;#125; from &lt;span class=&#34;string&#34;&gt;&amp;#x27;@/apis/user&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//個人借書記錄&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;useBookStatus&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; defineStore(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bookStatus&amp;#x27;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    state: () =&amp;gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bookStatus: []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    actions: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        async &lt;span class=&#34;title function_&#34;&gt;getBookStatus&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(id)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; await &lt;span class=&#34;title function_&#34;&gt;userAPI&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(id)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.bookStatus = res.data.data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;//console.log(this.bookStatus)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        clearBookStatus() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.bookStatus = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    persist: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3️⃣個人頁的 JS 大概長這樣，用 mapActions () 輔助函數將 action 屬性映射到组件中，然後當頁面加載後根據 id 執行 getBookStatus 方法，查詢個人的借書記錄&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/springMVC/status_action.png&#34; class=&#34;abc&#34; width=&#34;600&#34; height=&#34;500&#34;&gt;
&lt;h2 id=&#34;後端&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#後端&#34;&gt;#&lt;/a&gt; 後端&lt;/h2&gt;
&lt;p&gt;項目結構簡單，主要是父工程，PO 類，工具類只有生成和解析 jwt 令牌，主要業務邏輯寫在 boot-web-management&lt;/p&gt;
&lt;img data-src=&#34;/John/img/java/springMVC/boot-web-management.png&#34; class=&#34;abc&#34; width=&#34;300&#34; height=&#34;250&#34;&gt;
&lt;p&gt;1️⃣首先是登錄功能，查詢用戶表，如果用戶存在剛獲得用戶對象後生成 jwt 令牌返回前端，沒有則返回登錄失敗信息給前端&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@RestController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LoginController&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; UserService userService;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@PostMapping(&amp;quot;/login&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Result &lt;span class=&#34;title function_&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@RequestBody&lt;/span&gt; User user)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;用戶登錄:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;,user);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;u&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; userService.login(user);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//用戶登錄成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(u != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Map&amp;lt;String, Object&amp;gt; claims = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            claims.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;, u.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            claims.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;, u.getUsername());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            claims.put(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, u.getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jwt&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JwtUtils.generateJwt(claims);&lt;span class=&#34;comment&#34;&gt;//生成token令牌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Result.success(jwt);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//登錄失敗&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Result.error(&lt;span class=&#34;string&#34;&gt;&amp;quot;密碼帳號有錯&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2️⃣之後都是對用戶的借書狀態和圖書狀態的增刪改查，使用了 interceptor 查詢令牌，沒有則攔截，還有全局異常配置等，沒什麼特別，值得說的是我用了 Spring AOP, 自定義註解來對重要的操作進行額外的日誌記錄。&lt;br&gt;
首先要創一個自定義註解，說明在哪方法上運行&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//自定義註解,記錄修改用戶修改日誌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Retention(RetentionPolicy.RUNTIME)&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;//運行時生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Target(ElementType.METHOD)&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//註明方法上生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;@interface&lt;/span&gt; Log &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裡我使用了 @Around 做切入方法，因為我需要記錄原始方法的運行時間，annotation 則以自定義註解為切點。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Component&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//交給IOC管理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Aspect&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//切面類&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LogAspect&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; HttpServletRequest request;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; OperateLogMapper operateLogMapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Around(&amp;quot;@annotation(com.itheima.anno.Log)&amp;quot;)&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//以註解方式配備切入點方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Object &lt;span class=&#34;title function_&#34;&gt;recordLog&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ProceedingJoinPoint joinPoint)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Throwable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作人ID,當前登錄員工的ID,獲最請求頭的JWT令牌,解析令牌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jwt&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; request.getHeader(&lt;span class=&#34;string&#34;&gt;&amp;quot;token&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Claims&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;claims&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JwtUtils.parseJWT(jwt);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;operateUser&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (Integer) claims.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//Claims類為Object,所以要強轉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作時間&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;operateTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDateTime.now();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作類名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;className&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; joinPoint.getTarget().getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作方法名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;methodName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; joinPoint.getSignature().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作方法參數&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Object[] args = joinPoint.getArgs();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;methodParams&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Arrays.toString(args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//開始調用原始方法時間&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//調用原始目標方法運行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; joinPoint.proceed();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//方法返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;returnValue&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JSONObject.toJSONString(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//操作時間&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;costTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; end - begin;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//記錄操作日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;OperateLog&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;operateLog&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;OperateLog&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,operateUser,operateTime,className,methodName,methodParams,returnValue,costTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        operateLogMapper.insert(operateLog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;AOP記錄日志:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;, operateLog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然後在需要的 API 加上就完成了&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;//修改書本出借狀態和新增用戶借書記錄&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;meta&#34;&gt;@PutMapping&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Result &lt;span class=&#34;title function_&#34;&gt;updateStatus&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;meta&#34;&gt;@RequestBody&lt;/span&gt; UserBorrow userBorrow)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;借出書本資料:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;,userBorrow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       bookService.updateStatus(userBorrow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Result.success();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3️⃣我對 AOP 的理解是，它是以動態代理的方式去增強功能，表達式則是要加強的方法 (切點), 切入方法則是什麼時候做加強，是代碼執行前還是後，要理解源碼還是蠻複雜的，幸好能理解並使用不難～&lt;/p&gt;
&lt;img data-src=&#34;https://usagif.com/wp-content/uploads/gifs/thanks-for-watching-9.gif&#34; class=&#34;abc&#34; width=&#34;600&#34; height=&#34;350&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://superrjohn.github.io/John/2023/10/26/java/rabbitmq/rabbitmq</guid>
            <title>Hello RabbitMq!</title>
            <link>https://superrjohn.github.io/John/2023/10/26/java/rabbitmq/rabbitmq</link>
            <category>RabbitMQ</category>
            <pubDate>Thu, 26 Oct 2023 22:18:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://superrjohn.github.io/John/2023/10/26/java/radis/radis</guid>
            <title>Hello Radis!</title>
            <link>https://superrjohn.github.io/John/2023/10/26/java/radis/radis</link>
            <category>Radis</category>
            <pubDate>Thu, 26 Oct 2023 22:15:36 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://superrjohn.github.io/John/2023/10/26/java/test_java</guid>
            <title>Hello Java!</title>
            <link>https://superrjohn.github.io/John/2023/10/26/java/test_java</link>
            <category>java</category>
            <pubDate>Thu, 26 Oct 2023 22:10:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;🍉 目前只是當做分類，還沒想到內容～&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
